.\" Man page generated from reStructuredText.
.
.TH "MONGOC_COLLECTION_WRITE_COMMAND_WITH_OPTS" "3" "Oct 11, 2017" "1.8.1" "MongoDB C Driver"
.SH NAME
mongoc_collection_write_command_with_opts \- mongoc_collection_write_command_with_opts()
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH SYNOPSIS
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
bool
mongoc_collection_write_command_with_opts (mongoc_collection_t *collection,
                                           const bson_t *command,
                                           const bson_t *opts,
                                           bson_t *reply,
                                           bson_error_t *error);
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Execute a command on the server, applying logic that is specific to commands that write, and taking the MongoDB server version into account. To send a raw command to the server without any of this logic, use \fBmongoc_collection_command_simple\fP\&.
.sp
Use this function for commands that write such as “drop” or “createRole” (but not for “insert”, “update”, or “delete”, see \fI\%Basic Write Operations\fP). Write concern is applied from \fBopts\fP, or else from \fBcollection\fP\&. The write concern is omitted for MongoDB before 3.2. Collation is applied from \fBopts\fP (see example for the “distinct” command with opts). Collation requires MongoDB 3.2 or later, otherwise an error is returned. No read concern or read preferences are applied.
.sp
To target a specific server, include an integer “serverId” field in \fBopts\fP with an id obtained first by calling \fBmongoc_client_select_server\fP, then \fBmongoc_server_description_id\fP on its return value.
.sp
\fBreply\fP is always initialized, and must be freed with \fI\%bson_destroy()\fP\&.
.SH PARAMETERS
.INDENT 0.0
.IP \(bu 2
\fBcollection\fP: A \fBmongoc_collection_t\fP\&.
.IP \(bu 2
\fBcommand\fP: A \fI\%bson_t\fP containing the command specification.
.IP \(bu 2
\fBopts\fP: A \fI\%bson_t\fP containing additional options.
.IP \(bu 2
\fBreply\fP: A location for the resulting document.
.IP \(bu 2
\fBerror\fP: An optional location for a \fBbson_error_t\fP or \fBNULL\fP\&.
.UNINDENT
.SH ERRORS
.sp
Errors are propagated via the \fBerror\fP parameter.
.SH RETURNS
.sp
Returns \fBtrue\fP if successful. Returns \fBfalse\fP and sets \fBerror\fP if there are invalid arguments or a server or network error.
.sp
A write concern timeout or write concern error is considered a failure.
.SH BASIC WRITE OPERATIONS
.sp
Do not use this function to call the basic write commands “insert”, “update”, and “delete”. Those commands require special logic not implemented in \fBmongoc_collection_write_command_with_opts\fP\&. For basic write operations use CRUD functions such as \fBmongoc_collection_write_command_with_opts\fP and the others described in the CRUD tutorial, or use the Bulk API\&.
.SH EXAMPLE
.sp
See the example code for \fBmongoc_client_read_command_with_opts\fP\&.
.SH AUTHOR
MongoDB, Inc
.SH COPYRIGHT
2017, MongoDB, Inc
.\" Generated by docutils manpage writer.
.
