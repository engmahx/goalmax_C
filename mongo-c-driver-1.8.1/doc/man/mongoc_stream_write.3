.\" Man page generated from reStructuredText.
.
.TH "MONGOC_STREAM_WRITE" "3" "Oct 11, 2017" "1.8.1" "MongoDB C Driver"
.SH NAME
mongoc_stream_write \- mongoc_stream_write()
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH SYNOPSIS
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
ssize_t
mongoc_stream_write (mongoc_stream_t *stream,
                     void *buf,
                     size_t count,
                     int32_t timeout_msec);
.ft P
.fi
.UNINDENT
.UNINDENT
.SH PARAMETERS
.INDENT 0.0
.IP \(bu 2
\fBstream\fP: A \fBmongoc_stream_t\fP\&.
.IP \(bu 2
\fBbuf\fP: The buffer to write.
.IP \(bu 2
\fBcount\fP: The number of bytes to write.
.IP \(bu 2
\fBtimeout_msec\fP: The number of milliseconds to wait before failure, a timeout of 0 will not block. If negative, use the default timeout.
.UNINDENT
.sp
The \fBmongoc_stream_write()\fP function shall perform a write to a \fBmongoc_stream_t\fP\&. Itâ€™s modeled on the API and semantics of \fBwrite()\fP, though the parameters map only loosely.
.SH RETURNS
.sp
The \fBmongoc_stream_write\fP function returns the number of bytes write on success. It returns \fB>= 0\fP and \fB< min_bytes\fP when end\-of\-file is encountered and \fB\-1\fP on failure. \fBerrno\fP is set upon failure.
.SH SEE ALSO
.sp
\fBmongoc_stream_read()\fP
.sp
\fBmongoc_stream_readv()\fP
.sp
\fBmongoc_stream_writev()\fP
.SH AUTHOR
MongoDB, Inc
.SH COPYRIGHT
2017, MongoDB, Inc
.\" Generated by docutils manpage writer.
.
